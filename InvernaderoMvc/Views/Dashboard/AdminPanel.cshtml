@{
    ViewData["Title"] = "Panel de AdministraciÃ³n";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 class="mb-4">ðŸ“Š Promedios Diarios</h1>

<div class="card mb-4 shadow-sm">
  <div class="card-body">
    <canvas id="dailyAvgChart"></canvas>
  </div>
</div>

<table class="table table-hover">
  <thead class="table-light">
    <tr>
      <th>Fecha</th><th>Temp</th><th>Humedad</th><th>Nivel</th><th>pH</th>
    </tr>
  </thead>
  <tbody id="avgTableBody"></tbody>
</table>

@section Scripts {
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
  async function loadAdminData() {
    const resp = await fetch('/datos');
    const data = await resp.json();

    // Agrupar por dÃ­a y calcular promedios
    const byDay = {};
    data.forEach(s => {
      const day = new Date(s.FechaHora).toISOString().slice(0,10);
      if (!byDay[day]) byDay[day] = { temps:[], hums:[], levels:[], phs:[] };
      byDay[day].temps.push(s.temperatue);
      byDay[day].hums.push(s.humidity);
      byDay[day].levels.push(s.nivel);
      byDay[day].phs.push(s.ph);
    });

    const labels = [], avgTemp=[], avgHum=[], avgLevel=[], avgPh=[];
    for (const day of Object.keys(byDay).sort()) {
      const group = byDay[day];
      labels.push(day);
      avgTemp.push( group.temps.reduce((a,b)=>a+b)/group.temps.length );
      avgHum.push(  group.hums.reduce((a,b)=>a+b)/group.hums.length );
      avgLevel.push(group.levels.reduce((a,b)=>a+b)/group.levels.length);
      avgPh.push(   group.phs.reduce((a,b)=>a+b)/group.phs.length );
    }

    // Tabla
    const tbody = document.getElementById('avgTableBody');
    tbody.innerHTML = '';
    labels.forEach((day,i) => {
      tbody.insertAdjacentHTML('beforeend', `
        <tr>
          <td>${day}</td>
          <td>${avgTemp[i].toFixed(1)}</td>
          <td>${avgHum[i].toFixed(1)}</td>
          <td>${avgLevel[i].toFixed(1)}</td>
          <td>${avgPh[i].toFixed(2)}</td>
        </tr>`);
    });

    // GrÃ¡fico
    const ctx = document.getElementById('dailyAvgChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels,
        datasets: [
          { label:'Temp (Â°C)',    data:avgTemp,   backgroundColor:'rgba(255,99,132,0.5)' },
          { label:'Humedad (%)',  data:avgHum,    backgroundColor:'rgba(54,162,235,0.5)' },
          { label:'Nivel',        data:avgLevel,  backgroundColor:'rgba(255,206,86,0.5)' },
          { label:'pH',           data:avgPh,     backgroundColor:'rgba(75,192,192,0.5)' }
        ]
      },
      options: {
        responsive: true,
        scales:{ x:{ stacked:true }, y:{ stacked:false } }
      }
    });
  }

  loadAdminData();
  </script>
}
